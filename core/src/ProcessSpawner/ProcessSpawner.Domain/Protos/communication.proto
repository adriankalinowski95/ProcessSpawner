syntax = "proto3";

option csharp_namespace = "ProcessSpawner.Protobuf";

package Communication;

service SpawnProcessService {
  rpc SpawnProcess(SpawnRequest) returns (SpawnResponse);
  rpc StopProcess(StopRequest) returns (StopResponse);
}

service ProcessQueryService {
  rpc QueryProcesses(QueryRequest) returns (QueryResponse);
}

message ProcessInstance {
  uint32 process_id = 1;
  string internal_id = 2;
  int64 created_time_ms = 3;
  int64 last_update_time_ms = 4;
}

message SpawnRequest {
  string internal_id = 1;
  string process_type = 2;
  map<string, string> parameters = 3;
}

message SpawnResponse {
  ProcessInstance process = 1;
  bool success = 2;
  string message = 3;
}

message StopRequest {
  uint32 process_id = 1;
  string internal_id = 2;
}

message StopResponse {
  bool success = 1;
  string message = 2;
}

enum ProcessQueryType {
  All = 0;
  Running = 1;
  Stopped = 2;
  Failed = 3;
}

message QueryRequest {
  ProcessQueryType query_type = 1;
}

message QueryResponse {
  repeated ProcessInstance processes = 1;
  bool success = 2;
  string message = 3;
}